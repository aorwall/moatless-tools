Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Testing against Django installed in '/testbed/django'
Importing application model_fields
Found 87 test(s).
Skipping setup of unused database(s): other.
Operations to perform:
  Synchronize unmigrated apps: auth, contenttypes, messages, model_fields, sessions, staticfiles
  Apply all migrations: admin, sites
Synchronizing apps without migrations:
  Creating tables...
    Creating table django_content_type
    Creating table auth_permission
    Creating table auth_group
    Creating table auth_user
    Creating table django_session
    Creating table model_fields_foo
    Creating table model_fields_bar
    Creating table model_fields_whiz
    Creating table model_fields_whizdelayed
    Creating table model_fields_whiziter
    Creating table model_fields_whiziterempty
    Creating table model_fields_choiceful
    Creating table model_fields_bigd
    Creating table model_fields_floatmodel
    Creating table model_fields_bigs
    Creating table model_fields_unicodeslugfield
    Creating table model_fields_automodel
    Creating table model_fields_bigautomodel
    Creating table model_fields_smallautomodel
    Creating table model_fields_smallintegermodel
    Creating table model_fields_integermodel
    Creating table model_fields_bigintegermodel
    Creating table model_fields_positivebigintegermodel
    Creating table model_fields_positivesmallintegermodel
    Creating table model_fields_positiveintegermodel
    Creating table model_fields_post
    Creating table model_fields_nullbooleanmodel
    Creating table model_fields_booleanmodel
    Creating table model_fields_datetimemodel
    Creating table model_fields_durationmodel
    Creating table model_fields_nulldurationmodel
    Creating table model_fields_primarykeycharmodel
    Creating table model_fields_fkstobooleans
    Creating table model_fields_fktochar
    Creating table model_fields_renamedfield
    Creating table model_fields_verbosenamefield
    Creating table model_fields_genericipaddress
    Creating table model_fields_decimallessthanone
    Creating table model_fields_fieldclassattributemodel
    Creating table model_fields_datamodel
    Creating table model_fields_document
    Creating table model_fields_person
    Creating table model_fields_personwithheight
    Creating table model_fields_personwithheightandwidth
    Creating table model_fields_persondimensionsfirst
    Creating table model_fields_persontwoimages
    Creating table model_fields_jsonmodel
    Creating table model_fields_nullablejsonmodel
    Creating table model_fields_relatedjsonmodel
    Creating table model_fields_allfieldsmodel
    Creating table model_fields_manytomany
    Creating table model_fields_uuidmodel
    Creating table model_fields_nullableuuidmodel
    Creating table model_fields_primarykeyuuidmodel
    Creating table model_fields_relatedtouuidmodel
    Creating table model_fields_uuidchild
    Creating table model_fields_uuidgrandchild
    Running deferred SQL...
Running migrations:
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying sites.0001_initial... OK
  Applying sites.0002_alter_domain_unique... OK
System check identified no issues (0 silenced).
test_custom_encoder_decoder (model_fields.test_jsonfield.JSONFieldTests) ... ok
test_db_check_constraints (model_fields.test_jsonfield.JSONFieldTests) ... ok
test_invalid_value (model_fields.test_jsonfield.JSONFieldTests) ... ok
test_array_key_contains (model_fields.test_jsonfield.TestQuerying) ... skipped "Database doesn't support feature(s): supports_json_field_contains"
test_contained_by (model_fields.test_jsonfield.TestQuerying) ... skipped "Database doesn't support feature(s): supports_json_field_contains"
test_contained_by_unsupported (model_fields.test_jsonfield.TestQuerying) ... ok
test_contains (model_fields.test_jsonfield.TestQuerying) ... skipped "Database doesn't support feature(s): supports_json_field_contains"
test_contains_contained_by_with_key_transform (model_fields.test_jsonfield.TestQuerying) ... skipped "Database doesn't support feature(s): supports_json_field_contains"
test_contains_primitives (model_fields.test_jsonfield.TestQuerying) ... skipped "Database doesn't support feature(s): supports_primitives_in_json_field, supports_json_field_contains"
test_contains_unsupported (model_fields.test_jsonfield.TestQuerying) ... ok
test_deep_distinct (model_fields.test_jsonfield.TestQuerying) ... skipped "Database doesn't support feature(s): can_distinct_on_fields"
test_deep_lookup_array (model_fields.test_jsonfield.TestQuerying) ... ok
test_deep_lookup_mixed (model_fields.test_jsonfield.TestQuerying) ... ok
test_deep_lookup_objs (model_fields.test_jsonfield.TestQuerying) ... ok
test_deep_lookup_transform (model_fields.test_jsonfield.TestQuerying) ... ok
test_deep_values (model_fields.test_jsonfield.TestQuerying) ... ok
test_exact (model_fields.test_jsonfield.TestQuerying) ... ok
test_exact_complex (model_fields.test_jsonfield.TestQuerying) ... ok
test_expression_wrapper_key_transform (model_fields.test_jsonfield.TestQuerying) ... ok
test_has_any_keys (model_fields.test_jsonfield.TestQuerying) ... ok
test_has_key (model_fields.test_jsonfield.TestQuerying) ... ok
test_has_key_deep (model_fields.test_jsonfield.TestQuerying) ... test_has_key_list (model_fields.test_jsonfield.TestQuerying) ... test_has_key_null_value (model_fields.test_jsonfield.TestQuerying) ... ok
test_has_keys (model_fields.test_jsonfield.TestQuerying) ... ok
test_icontains (model_fields.test_jsonfield.TestQuerying) ... ok
test_isnull (model_fields.test_jsonfield.TestQuerying) ... ok
test_isnull_key (model_fields.test_jsonfield.TestQuerying) ... ok
test_isnull_key_or_none (model_fields.test_jsonfield.TestQuerying) ... ok
test_join_key_transform_annotation_expression (model_fields.test_jsonfield.TestQuerying) ... ok
test_key_contains (model_fields.test_jsonfield.TestQuerying) ... skipped "Database doesn't support feature(s): supports_json_field_contains"
test_key_endswith (model_fields.test_jsonfield.TestQuerying) ... ok
test_key_escape (model_fields.test_jsonfield.TestQuerying) ... ok
test_key_icontains (model_fields.test_jsonfield.TestQuerying) ... ok
test_key_iendswith (model_fields.test_jsonfield.TestQuerying) ... ok
test_key_iexact (model_fields.test_jsonfield.TestQuerying) ... ok
test_key_in (model_fields.test_jsonfield.TestQuerying) ... ok
test_key_iregex (model_fields.test_jsonfield.TestQuerying) ... ok
test_key_istartswith (model_fields.test_jsonfield.TestQuerying) ... ok
test_key_quoted_string (model_fields.test_jsonfield.TestQuerying) ... ok
test_key_regex (model_fields.test_jsonfield.TestQuerying) ... ok
test_key_sql_injection (model_fields.test_jsonfield.TestQuerying) ... skipped "Database doesn't support feature(s): has_json_operators"
test_key_sql_injection_escape (model_fields.test_jsonfield.TestQuerying) ... ok
test_key_startswith (model_fields.test_jsonfield.TestQuerying) ... ok
test_key_transform_annotation_expression (model_fields.test_jsonfield.TestQuerying) ... ok
test_key_transform_expression (model_fields.test_jsonfield.TestQuerying) ... ok
test_key_transform_raw_expression (model_fields.test_jsonfield.TestQuerying) ... ok
test_key_values (model_fields.test_jsonfield.TestQuerying) ... ok
test_key_values_boolean (model_fields.test_jsonfield.TestQuerying) ... ok
test_lookup_exclude (model_fields.test_jsonfield.TestQuerying) ... ok
test_lookup_exclude_nonexistent_key (model_fields.test_jsonfield.TestQuerying) ... ok
test_lookups_with_key_transform (model_fields.test_jsonfield.TestQuerying) ... ok
test_nested_key_transform_annotation_expression (model_fields.test_jsonfield.TestQuerying) ... ok
test_nested_key_transform_expression (model_fields.test_jsonfield.TestQuerying) ... ok
test_nested_key_transform_on_subquery (model_fields.test_jsonfield.TestQuerying) ... ok
test_nested_key_transform_raw_expression (model_fields.test_jsonfield.TestQuerying) ... ok
test_none_key (model_fields.test_jsonfield.TestQuerying) ... ok
test_none_key_and_exact_lookup (model_fields.test_jsonfield.TestQuerying) ... ok
test_none_key_exclude (model_fields.test_jsonfield.TestQuerying) ... ok
test_obj_subquery_lookup (model_fields.test_jsonfield.TestQuerying) ... ok
test_order_grouping_custom_decoder (model_fields.test_jsonfield.TestQuerying) ... ok
test_ordering_by_transform (model_fields.test_jsonfield.TestQuerying) ... ok
test_ordering_grouping_by_count (model_fields.test_jsonfield.TestQuerying) ... ok
test_ordering_grouping_by_key_transform (model_fields.test_jsonfield.TestQuerying) ... ok
test_shallow_list_lookup (model_fields.test_jsonfield.TestQuerying) ... ok
test_shallow_lookup_obj_target (model_fields.test_jsonfield.TestQuerying) ... ok
test_shallow_obj_lookup (model_fields.test_jsonfield.TestQuerying) ... ok
test_usage_in_subquery (model_fields.test_jsonfield.TestQuerying) ... ok
test_dict (model_fields.test_jsonfield.TestSaveLoad) ... ok
test_json_null_different_from_sql_null (model_fields.test_jsonfield.TestSaveLoad) ... ok
test_list (model_fields.test_jsonfield.TestSaveLoad) ... ok
test_null (model_fields.test_jsonfield.TestSaveLoad) ... ok
test_primitives (model_fields.test_jsonfield.TestSaveLoad) ... ok
test_realistic_object (model_fields.test_jsonfield.TestSaveLoad) ... ok
test_formfield (model_fields.test_jsonfield.TestFormField) ... ok
test_formfield_custom_encoder_decoder (model_fields.test_jsonfield.TestFormField) ... ok
test_deconstruct (model_fields.test_jsonfield.TestMethods) ... ok
test_deconstruct_custom_encoder_decoder (model_fields.test_jsonfield.TestMethods) ... ok
test_get_transforms (model_fields.test_jsonfield.TestMethods) ... ok
test_key_transform_text_lookup_mixin_non_key_transform (model_fields.test_jsonfield.TestMethods) ... ok
test_dumping (model_fields.test_jsonfield.TestSerialization) ... ok
test_loading (model_fields.test_jsonfield.TestSerialization) ... ok
test_xml_serialization (model_fields.test_jsonfield.TestSerialization) ... ok
test_custom_encoder (model_fields.test_jsonfield.TestValidation) ... ok
test_invalid_decoder (model_fields.test_jsonfield.TestValidation) ... ok
test_invalid_encoder (model_fields.test_jsonfield.TestValidation) ... ok
test_validation_error (model_fields.test_jsonfield.TestValidation) ... ok

======================================================================
FAIL: test_has_key_deep (model_fields.test_jsonfield.TestQuerying) (condition=<Q: (AND: ('value__has_key', KeyTransform(KeyTransform(KeyTransform(F(value))))))>)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/model_fields/test_jsonfield.py", line 547, in test_has_key_deep
    self.assertSequenceEqual(
AssertionError: Sequences differ: <QuerySet []> != [<NullableJSONModel: NullableJSONModel object (5)>]

Second sequence contains 1 additional elements.
First extra element 0:
<NullableJSONModel: NullableJSONModel object (5)>

- <QuerySet []>
+ [<NullableJSONModel: NullableJSONModel object (5)>]

======================================================================
FAIL: test_has_key_deep (model_fields.test_jsonfield.TestQuerying) (condition=<Q: (AND: ('value__has_key', F(value__d__1__f)))>)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/model_fields/test_jsonfield.py", line 547, in test_has_key_deep
    self.assertSequenceEqual(
AssertionError: Sequences differ: <QuerySet []> != [<NullableJSONModel: NullableJSONModel object (5)>]

Second sequence contains 1 additional elements.
First extra element 0:
<NullableJSONModel: NullableJSONModel object (5)>

- <QuerySet []>
+ [<NullableJSONModel: NullableJSONModel object (5)>]

======================================================================
FAIL: test_has_key_list (model_fields.test_jsonfield.TestQuerying) (condition=<Q: (AND: ('value__has_key', KeyTransform(KeyTransform(F(value)))))>)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/model_fields/test_jsonfield.py", line 562, in test_has_key_list
    self.assertSequenceEqual(
AssertionError: Sequences differ: <QuerySet []> != [<NullableJSONModel: NullableJSONModel object (14)>]

Second sequence contains 1 additional elements.
First extra element 0:
<NullableJSONModel: NullableJSONModel object (14)>

- <QuerySet []>
+ [<NullableJSONModel: NullableJSONModel object (14)>]

======================================================================
FAIL: test_has_key_list (model_fields.test_jsonfield.TestQuerying) (condition=<Q: (AND: ('value__has_key', KeyTransform(KeyTransform(F(value)))))>)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/model_fields/test_jsonfield.py", line 562, in test_has_key_list
    self.assertSequenceEqual(
AssertionError: Sequences differ: <QuerySet []> != [<NullableJSONModel: NullableJSONModel object (14)>]

Second sequence contains 1 additional elements.
First extra element 0:
<NullableJSONModel: NullableJSONModel object (14)>

- <QuerySet []>
+ [<NullableJSONModel: NullableJSONModel object (14)>]

======================================================================
FAIL: test_has_key_list (model_fields.test_jsonfield.TestQuerying) (condition=<Q: (AND: ('value__has_key', F(value__1__b)))>)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/model_fields/test_jsonfield.py", line 562, in test_has_key_list
    self.assertSequenceEqual(
AssertionError: Sequences differ: <QuerySet []> != [<NullableJSONModel: NullableJSONModel object (14)>]

Second sequence contains 1 additional elements.
First extra element 0:
<NullableJSONModel: NullableJSONModel object (14)>

- <QuerySet []>
+ [<NullableJSONModel: NullableJSONModel object (14)>]

----------------------------------------------------------------------
Ran 87 tests in 0.484s

FAILED (failures=5, skipped=8)
